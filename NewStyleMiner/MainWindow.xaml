<Controls:MetroWindow
                        xmlns:local="clr-namespace:NewStyleMiner"
                        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                        xmlns:Controls="http://metro.mahapps.com/winfx/xaml/controls"
                        xmlns:lvc="clr-namespace:LiveCharts.Wpf;assembly=LiveCharts.Wpf"
                        xmlns:telerik="http://schemas.telerik.com/2008/xaml/presentation"
                        xmlns:iconPacks="http://metro.mahapps.com/winfx/xaml/iconpacks"
                        xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
                        xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
                        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
                        xmlns:Dialog="clr-namespace:MahApps.Metro.Controls.Dialogs;assembly=MahApps.Metro"
                        Dialog:DialogParticipation.Register="{Binding}"
                        xmlns:Effects="clr-namespace:Telerik.Windows.Controls.ColorEditor.Effects;assembly=Telerik.Windows.Controls.Input"                         
                        x:Class="NewStyleMiner.MainWindow"
                        DataContext="{StaticResource MainViewModel}"
                        Height="715.054"
                        Width="795.657" WindowStartupLocation="CenterScreen" ResizeMode="CanMinimize" ShowMaxRestoreButton="False"
                        x:Name="MainWindowDlg"
                        xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
                        xmlns:utils="clr-namespace:NewStyleMiner.Utils"
                        xmlns:tb="http://www.hardcodet.net/taskbar"
                        mc:Ignorable="d" IsEnabled="{Binding IsMainWindowEnable}" Closing="MainWindowDlg_Closing">
    <i:Interaction.Triggers>
        <i:EventTrigger EventName="Loaded">
            <i:InvokeCommandAction Command="{Binding WindowLoaded}" CommandParameter="{Binding ElementName=MainWindowDlg}"></i:InvokeCommandAction>
        </i:EventTrigger>
        <i:EventTrigger EventName="Closing">
            <i:InvokeCommandAction Command="{Binding WindowClosing}" CommandParameter="{Binding ElementName=MainWindowDlg}"></i:InvokeCommandAction>
        </i:EventTrigger>
    </i:Interaction.Triggers>

    <!-- the application's NotifyIcon - started from App.xaml.cs. Declares its own view model. -->
    <Controls:MetroWindow.Resources>
        <DataTemplate x:Key="cmbTemplate">
            <WrapPanel>
                <Image Stretch="Uniform" Source="{Binding ImageSource}" VerticalAlignment="Stretch" HorizontalAlignment="Stretch"/>
            </WrapPanel>
        </DataTemplate>
        <!-- Simple Button - This control sets brushes on each state. Note that these brushes must be listed above since they are static resources -->
        <Style x:Key="ButtonMineStyle" TargetType="{x:Type Button}" BasedOn="{x:Null}">
            <Setter Property="FocusVisualStyle" Value="{DynamicResource SimpleButtonFocusVisual}"/>
            <Setter Property="Background" Value="{DynamicResource NormalBrush}"/>
            <Setter Property="BorderBrush" Value="{DynamicResource NormalBorderBrush}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">

                        <!-- We use Grid as a root because it is easy to add more elements to customize the button -->
                        <Grid x:Name="Grid">
                            <Border x:Name="Border" BorderThickness="{TemplateBinding BorderThickness}" Padding="{TemplateBinding Padding}" BorderBrush="White" Background="White" CornerRadius="12"/>

                            <!-- Content Presenter is where the text content etc is placed by the control -->
                            <!-- The bindings are useful so that the control can be parameterized without editing the template -->
                            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" RecognizesAccessKey="True"/>
                        </Grid>

                        <!--Each state sets a brush on the Border in the template -->
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="Border" Value="White"/>
                                <Setter Property="BorderBrush" TargetName="Border" Value="#FF7AEEF9"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="Border" Value="White"/>
                                <Setter Property="BorderBrush" TargetName="Border" Value="#FF0060BF"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="true"/>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" Value="{DynamicResource DisabledBackgroundBrush}" TargetName="Border"/>
                                <Setter Property="BorderBrush" Value="{DynamicResource DisabledBorderBrush}" TargetName="Border"/>
                                <Setter Property="Foreground" Value="{DynamicResource DisabledForegroundBrush}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="ButtonMineStyle2" TargetType="{x:Type Button}" BasedOn="{x:Null}">
            <Setter Property="FocusVisualStyle" Value="{DynamicResource SimpleButtonFocusVisual}"/>
            <Setter Property="Background" Value="{DynamicResource NormalBrush}"/>
            <Setter Property="BorderBrush" Value="{DynamicResource NormalBorderBrush}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">

                        <!-- We use Grid as a root because it is easy to add more elements to customize the button -->
                        <Grid x:Name="Grid">
                            <Border x:Name="Border" BorderThickness="{TemplateBinding BorderThickness}" Padding="{TemplateBinding Padding}" BorderBrush="White" Background="#FF59D2F5" CornerRadius="12"/>

                            <!-- Content Presenter is where the text content etc is placed by the control -->
                            <!-- The bindings are useful so that the control can be parameterized without editing the template -->
                            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" RecognizesAccessKey="True"/>
                        </Grid>

                        <!--Each state sets a brush on the Border in the template -->
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="Border" Value="#FF7AEEF9"/>
                                <Setter Property="BorderBrush" TargetName="Border" Value="White"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="Border" Value="#FF0060BF"/>
                                <Setter Property="BorderBrush" TargetName="Border" Value="White"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="true"/>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" Value="{DynamicResource DisabledBackgroundBrush}" TargetName="Border"/>
                                <Setter Property="BorderBrush" Value="{DynamicResource DisabledBorderBrush}" TargetName="Border"/>
                                <Setter Property="Foreground" Value="{DynamicResource DisabledForegroundBrush}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

    </Controls:MetroWindow.Resources>
    <Grid>
        <Grid.Background>
            <ImageBrush/>
        </Grid.Background>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*"/>
            <ColumnDefinition Width="*"/>
            <ColumnDefinition Width="*"/>
            <ColumnDefinition Width="*"/>
            <ColumnDefinition Width="*"/>
            <ColumnDefinition Width="*"/>
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition/>
            <RowDefinition/>
            <RowDefinition/>
            <RowDefinition/>
            <RowDefinition/>
            <RowDefinition MinHeight="250"/>
        </Grid.RowDefinitions>
        <Canvas Grid.Row="0" Grid.Column="0"  Grid.RowSpan="6" Grid.ColumnSpan="6">
            <Canvas.Background>
                <ImageBrush ImageSource="Resources\main_screen-i2.png"/>
            </Canvas.Background>
        </Canvas>

        <!--<tb:TaskbarIcon x:Name="NotifyIcon"
                        IconSource="Resources/icon_.ico"
                        ToolTipText="Double-click for window, right-click for menu">
            --><!--DoubleClickCommand="{Commands:ShowSampleWindowCommand}" 
                        DoubleClickCommandParameter="{Binding RelativeSource={RelativeSource Self}}">--><!--
            <tb:TaskbarIcon.ContextMenu>
                <ContextMenu>
                    <TextBlock Text="Hiding the sample window will not close it!" />
                    <MenuItem Header="_Show Sample Window [S]" IsEnabled="True"
                          Command="{Commands:ShowSampleWindowCommand}"
                          CommandParameter="{Binding}">
                        <MenuItem.Icon>
                            <Image Width="16"
                               Height="16"
                               Source="/Resources/icon_.ico" />
                        </MenuItem.Icon>
                       
                    </MenuItem>

                    <Separator />

                    <MenuItem Header="_Hide Sample Window [H]"
                          Command="{Commands:HideSampleWindowCommand}"
                          CommandParameter="{Binding}">
                        <MenuItem.Icon>
                            <Image Width="16"
                               Height="16"
                                   Source="/Resources/icon_.ico" />
                        </MenuItem.Icon>
                    </MenuItem>
                </ContextMenu>
            </tb:TaskbarIcon.ContextMenu>
        </tb:TaskbarIcon>-->


        <StackPanel Grid.Row="8" Grid.Column ="0" Grid.ColumnSpan="4" Margin="5">
            <Label Content="{Binding StatisticCaption}"/>
            <lvc:CartesianChart Grid.Row="1" AnimationsSpeed="0:0:0.5" Hoverable="False" DataTooltip="{x:Null}" Height="200">
                <lvc:CartesianChart.Series>
                    <lvc:LineSeries Values="{Binding ChartValues}"  Title="mBTC"
                                PointGeometry="{x:Null}" 
                                LineSmoothness="1"
                                StrokeThickness="6" 
                                Stroke="#F34336"
                                Fill="Transparent"/>
                </lvc:CartesianChart.Series>
                <lvc:CartesianChart.AxisX>
                    <lvc:Axis LabelFormatter="{Binding DateTimeFormatter}" 
                          MaxValue="{Binding AxisMax}" 
                          MinValue="{Binding AxisMin}"
                          Unit="{Binding AxisUnit}" Title="Time in minutes">
                        <lvc:Axis.Separator>
                            <lvc:Separator Step="{Binding AxisStep}" />
                        </lvc:Axis.Separator>
                    </lvc:Axis>
                </lvc:CartesianChart.AxisX>
                <lvc:CartesianChart.AxisY>
                    <lvc:Axis Title="{Binding YAsixTitle}"></lvc:Axis>
                </lvc:CartesianChart.AxisY>
            </lvc:CartesianChart>
        </StackPanel>
        <StackPanel Grid.Row="8" Grid.Column ="4" Margin="5" Grid.ColumnSpan="2" HorizontalAlignment="Left">
            <Label Content="{Binding ExpectedRevenueCaption}"/>
            <telerik:RadGridView ShowGroupPanel="False" GridLinesVisibility="Horizontal" AutoGenerateColumns="False" CanUserFreezeColumns="False" 
                                 CanUserReorderColumns="False" CanUserResizeColumns="False" CanUserSortColumns="False" CanUserDeleteRows="False" CanUserInsertRows="False" 
                                 CanUserSelect="False" SnapsToDevicePixels="True" IsReadOnly="True" Width="253" ItemsSource="{Binding DataGridSource}" 
                                 AlternationCount="2" RowIndicatorVisibility="Collapsed" DragElementAction="None" CanUserSortGroups="False" CanUserSearch="False" IsFilteringAllowed="False" >
                <telerik:StyleManager.Theme>
                    <telerik:SummerTheme/>
                </telerik:StyleManager.Theme>
                <telerik:RadGridView.Columns>
                    <telerik:GridViewDataColumn Header="Period" DataMemberBinding="{Binding AmountType}" IsFilterable="False" IsGroupable="False" IsReorderable="False" IsSortable="False" ShowDistinctFilters="False" />
                    <telerik:GridViewDataColumn Header="RUB" DataMemberBinding="{Binding AmountCount}" HeaderTextAlignment="Right" MinWidth="50" Width="*" IsFilterable="False" IsGroupable="False" IsReorderable="False" IsSortable="False" ShowDistinctFilters="False" IsResizable="False" TextAlignment="Right"/>
                </telerik:RadGridView.Columns>
            </telerik:RadGridView>
        </StackPanel>
        <Button Width="48" Grid.Column="0" Grid.Row="0"
                              Height="48"
                              Margin="4"
                              Style="{DynamicResource MahApps.Metro.Styles.MetroCircleButtonStyle}" ToolTip="Настройки" Command="{Binding OpenSettingsWindow, Source={StaticResource MainViewModel}}" CommandParameter="{Binding ElementName=MainWindowDlg}">
            <iconPacks:PackIconModern Width="20"
                                              Height="20"
                                              Kind="Settings" />
        </Button>
        <Label Grid.Row="0" Grid.Column="2" Grid.ColumnSpan="2" Content="{Binding BalanceCaption}" FontFamily="Courier New" FontSize="24" Foreground="White" FontWeight="Medium" HorizontalAlignment="Center" VerticalAlignment="Center" Width="Auto"/>
        <Label x:Name="BalanseLabel" Grid.Row="1" Grid.Column="1" Grid.ColumnSpan="4" Content="{Binding BalanceAmount}" FontFamily="Gill Sans Ultra Bold" FontSize="48" Foreground="White" HorizontalAlignment="Center" VerticalAlignment="Center" FontWeight="Bold" TextOptions.TextFormattingMode="Display" Width="Auto">
            <Label.Effect>
                <DropShadowEffect Opacity="0.25"/>
            </Label.Effect>
        </Label>
        <Rectangle Grid.Column="0" Grid.ColumnSpan="6" Grid.Row="3" Grid.RowSpan="2" Height="Auto" Width="Auto" Margin="20,10,20,10" Fill="White" RadiusX="30" RadiusY="30">
            <Rectangle.Effect>
                <DropShadowEffect Opacity="0.25" ShadowDepth="10" BlurRadius="10" Color="Gray"/>
            </Rectangle.Effect>
        </Rectangle>
        <!--<Label x:Name="label" Content="{Binding AmountCaption}" Margin="51.811,18.473,-54.197,28.407" Grid.Row="3" d:LayoutOverrides="Height"/>-->
        <!--<telerik:RadMaskedNumericInput Height="38" Grid.Row="3" Margin="50,0,0,0" Grid.Column="0" Grid.ColumnSpan="3" VerticalAlignment="Bottom" FontSize="24" FontFamily="Buxton Sketch" FontStyle="Italic" Mask="" MinWidth="150" Width="265"
                                       Value="{Binding PayRequestText}"/>-->
        <Label x:Name="label1" Content="{Binding MinPayingSummCaption}" Grid.Row="4" Margin ="15 0 3 3" VerticalAlignment="Top" FontSize="12" Grid.ColumnSpan="2" Grid.Column="2"/>
        <Label x:Name="label3" Content="{Binding AmountRequsiteCaption}" Grid.Column="2" HorizontalAlignment="Center" Grid.Row="3" Grid.ColumnSpan="2" Width="186" VerticalAlignment="Top" Margin="15"/>
        <telerik:RadMaskedTextInput x:Name="IdentTextBox" Grid.Column="2" HorizontalAlignment="Center" Grid.Row="2" VerticalAlignment="Bottom" Width="237" Height="40" 
                                    Value="{Binding IdentificatorText}" Mask="{Binding MaskIdentificatorText}" FontSize="22" FontFamily="Buxton Sketch" FontStyle="Italic" BorderBrush="Black" Grid.ColumnSpan="2" Grid.RowSpan="2" Placeholder="*"
                                    UpdateValueEvent="LostFocus"/>
        <!--<Label x:Name="label2" Content="{Binding TelNumberCaption}" Grid.Column="2" HorizontalAlignment="Center" Grid.Row="4" VerticalAlignment="Top" Width="157" FontSize="10" Grid.ColumnSpan="2" Margin="15"/>-->
        <Button Grid.Row="4" Grid.Column="2" Grid.ColumnSpan="2" Content="{Binding PayButtonCaption}" VerticalAlignment="Center" HorizontalAlignment="Center" Width="140" Height="40" Style="{DynamicResource ButtonMineStyle2}" Foreground="White" FontFamily="Calisto MT" FontSize="16"
                Command="{Binding PayCommand}">
            <Button.Effect>
                <DropShadowEffect Opacity="0.25"/>
            </Button.Effect>
        </Button>
        <telerik:RadComboBox x:Name="radComboBox" Grid.Column="4" Grid.Row="2" VerticalAlignment="Bottom" BorderBrush="Black" Foreground="Black" Background="White" Grid.RowSpan="2" 
                             ItemsSource="{Binding PaySystem}" SelectedIndex="{Binding CurentPaySystemIndex}" Height="40" Width="Auto">
            <!--ItemTemplate="{StaticResource cmbTemplate}">-->
        </telerik:RadComboBox>
        <Button x:Name="button" Content="{Binding StartButtonCaption}" Grid.Column="2" Grid.ColumnSpan="2" Grid.Row="2" Style="{DynamicResource ButtonMineStyle}" Width="140" Height="40" Foreground="#FF5384DA" FontFamily="Calisto MT" FontSize="22" TextOptions.TextFormattingMode="Display" FontWeight="Bold" Command="{Binding StartMiningProcess}">
            <Button.Effect>
                <DropShadowEffect Opacity="0.25"/>
            </Button.Effect>
        </Button>
    </Grid>
</Controls:MetroWindow>
